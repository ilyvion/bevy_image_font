rd_("ClAn I/O error occurred while loading the image font. This \xe2\x80\xa6DdCreates a new <code>ImageFontDescriptor</code> instance with the \xe2\x80\xa6CmThe row in the layout string where the repeated character \xe2\x80\xa6C`Sets the <code>font</code> field of this struct.DjThe handle to the <code>ImageFont</code> used to render this text. The \xe2\x80\xa6AoReturns the argument unchanged.0000000000000000000000BaCalls <code>U::from(self)</code>.0000000000000000000000BoProcesses the asset in an asynchronous closure.0ClThe size of each character, specified as a uniform width \xe2\x80\xa6C`Sets the <code>text</code> field of this struct.ClThe string of text to be rendered. Each character in the \xe2\x80\xa6ChSpacing as an integer value, ideal for pixel-perfect \xe2\x80\xa6DkInitializes the debug gizmo system for <code>ImageFontSpriteText</code> \xe2\x80\xa6CaSets the <code>color</code> field of this struct.CnThe color applied to the rendered text. This color affects \xe2\x80\xa6CkGets the path to the image file containing the font glyphs.BgThe width of the image being validated.CjFully specifies the bounds of each character. The most \xe2\x80\xa6CaRetains precise fractional values during scaling.CbSets the <code>anchor</code> field of this struct.CmThe alignment point of the text relative to its position. \xe2\x80\xa6CfThe column in the layout string where the repeated \xe2\x80\xa6CiA mapping from characters to their top-left positions \xe2\x80\xa6DdDebug visualization for <code>ImageFontSpriteText</code> components.BhThe height of the image being validated.BhGets the layout description of the font.D`Code for parsing an <code>ImageFont</code> off of an on-disk \xe2\x80\xa6ChConverts the letter spacing into a floating-point value.BhRounds fractional values during scaling.BgZero constant spacing between characterCcHow to move the character relative to the baseline.CgSpacing as a floating-point value, offering precise \xe2\x80\xa6ClKerning information for this character. This is a map of \xe2\x80\xa6ClThis module provides functionality for rendering text as \xe2\x80\xa6ClThe images that contain the font glyphs. Each glyph is a \xe2\x80\xa6CkInterprets the string as a \xe2\x80\x9cgrid\xe2\x80\x9d and slices up the \xe2\x80\xa6CiAn image font as well as the mapping of characters to \xe2\x80\xa6BkTruncates fractional values during scaling.CeThe character that was repeated in the layout string.CjHow much to advance the x position after rendering the \xe2\x80\xa6ClFailed to load an asset directly. This is usually caused \xe2\x80\xa6CnThe path provided for the font\xe2\x80\x99s image was not loaded as \xe2\x80\xa6CgCreates <code>Self</code> using <code>default()</code>.00000000000000BbThe number of lines in the layout.CnThe index of the texture atlas page where this character\xe2\x80\x99\xe2\x80\xa6CdErrors that occur while parsing the BMF file format.CiFailed to copy a character from the source font image \xe2\x80\xa65CjApplies the scaling mode to the provided value given a \xe2\x80\xa6CgSets the <code>font_height</code> field of this struct.CnIf set, overrides the height the font is rendered at. This \xe2\x80\xa6BcLoader for <code>ImageFont</code>s.CfA system set containing all systems related to the \xe2\x80\xa6CjParsing the on-disk representation of the font failed. \xe2\x80\xa6ClAn unspecified internal error occurred during rendering. \xe2\x80\xa6ChSets the <code>scaling_mode</code> field of this struct.CmDetermines how scaling is applied to the glyph dimensions \xe2\x80\xa6BnText rendered using an <code>ImageFont</code>.CkSpecifies the spacing between characters in text rendering.CeThe layouts of the texture atlases describing the \xe2\x80\xa6ClThis module provides functionality for rendering text as \xe2\x80\xa6DiThe <code>ImageSampler</code> to use during font image rendering. The \xe2\x80\xa6DeThe <code>ImageSampler</code> to use during font image rendering. \xe2\x80\xa6BaThe image path provided is empty.CjSets the <code>letter_spacing</code> field of this struct.CiDetermines a constant kerning between characters. The \xe2\x80\xa6EdSystem that renders each <code>ImageFontText</code> as child <code>Sprite</code> \xe2\x80\xa6CkAn error type representing issues that may arise during \xe2\x80\xa6DiThe image could not be converted to a <code>DynamicImage</code>. This \xe2\x80\xa6ClHuman-readable way to specify where the characters in an \xe2\x80\xa6BcLoader for <code>ImageFont</code>s.BnA Bevy plugin for rendering image-based fonts.CdManually specifies the top-left position of each \xe2\x80\xa6Al<code>bevy_image_font</code>CnThe index of this character\xe2\x80\x99s glyph in the texture atlas \xe2\x80\xa6ClThe layout string used for automatic character placement \xe2\x80\xa6CnThe image width does not evenly divide the character count \xe2\x80\xa6BgThe asset path has no parent directory.ChBMF fonts must not be packed, but the loaded font is \xe2\x80\xa6Di<code>BmFontLoader</code> only supports Unicode fonts, but the loaded \xe2\x80\xa6DiRepresents a character in an <code>ImageFont</code>, storing metadata \xe2\x80\xa6CaErrors that can occur when loading an image font.BlErrors that can show up during font loading.CiThe image height does not evenly divide the number of \xe2\x80\xa6DjOn-disk representation of an <code>ImageFont</code>, optimized to make \xe2\x80\xa6DdText rendered using an <code>ImageFont</code> as individual sprites.DhThe texture asset associated with the <code>ImageFont</code> was not \xe2\x80\xa6DfThe information required to render the character <code>c</code> in \xe2\x80\xa6CjThe color to draws the character bounding boxes in the \xe2\x80\xa60DhErrors that can occur during the rendering of an <code>ImageFont</code>.CjDetermines how scaling is applied when calculating the \xe2\x80\xa6CkDraws character bounding boxes in the scene when set to \xe2\x80\xa60DdA validation error occurred on the <code>ImageFontLayout</code>. \xe2\x80\xa6DkThe <code>ImageFont</code> asset required for rendering was not loaded. \xe2\x80\xa6EeSystem that renders each <code>ImageFontText</code> into its <code>Sprite</code>. \xe2\x80\xa6DkDebugging data for visualizing an <code>ImageFontSpriteText</code> in a \xe2\x80\xa6D`Add this <code>Component</code> to an entity to draw its gizmos.ClConfiguration settings for the <code>ImageFontLoader</code>.CjThe color to draws the text anchor points in the scene \xe2\x80\xa60CjA component for displaying in-world text that has been \xe2\x80\xa6C`The number of characters per line in the layout.DdDraws text anchor points in the scene when set to <code>true</code>.0DhA validation error occurred on the <code>ImageFontDescriptor</code>. \xe2\x80\xa6EhSystem that renders each <code>ImageFontText</code> into its <code>ImageNode</code>. \xe2\x80\xa6DfA repeated character was found in an <code>Automatic</code> layout \xe2\x80\xa6CdA component for displaying UI text that has been \xe2\x80\xa6DfThe <code>GizmoConfigGroup</code> used for debug visualizations of \xe2\x80\xa6CiThe color to draws the character anchor points in the \xe2\x80\xa60DhMarks any text where the underlying <code>ImageFont</code> asset has \xe2\x80\xa6DkDraws character anchor points in the scene when set to <code>true</code>\xe2\x80\xa60BjErrors that can show up during validation.0")